{"version":3,"sources":["../../src/pages/signup/signup.module.ts","../../src/pages/signup/signup.ts","../../node_modules/@ionic-native/file/index.js","../../node_modules/@ionic-native/transfer/index.js","../../node_modules/@ionic-native/file-path/index.js","../../node_modules/@ionic-native/camera/index.js"],"names":[],"mappings":"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AK,CAAC,CAAC;YACnC,CAAC,CAAC,CAAC;QACX,CAAC,EACD,eAAK;YACD,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,8BAAS,GAAT;QAEI,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;IACvB,CAAC;IAlMQ,UAAU;QALtB,wEAAS,CAAE;YACR,QAAQ,EAAE,aAAa;YACvB,WAAW,iEAAE,0EAAa;WACkC;SAC/D,CAAE;6EASkC;YACX,qEAAS;YACX,wEAAM;YACJ,iEAAQ;YACZ,yEAAI;YACA,4EAAQ;YACF,uEAAqB;YAC3B,gEAAe;YAChB,wEAAQ;YACL,+DAAiB;YAChB,wEAAW;YACD,iEAAqB;YAC9B,OAAY;OApB7B,UAAU,CAoMtB;IAAD,CAAC;AAAA;SApMY,UAAU,e;;;;;;;;;;ACjBvB;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACqB;AAC8C;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,gBAAgB;AACrE,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,8BAA8B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,gBAAgB;AACrE,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,gBAAgB;AACrE,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,kCAAkC;AACvF,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,gBAAgB;AACrE,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,gBAAgB;AACjE,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,cAAc;AAC7B,eAAe,cAAc;AAC7B,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB,eAAe,cAAc;AAC7B,eAAe,cAAc;AAC7B,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,+BAA+B,WAAW,EAAE;AAC5C;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,cAAc;AAC7B,iBAAiB,cAAc;AAC/B;AACA;AACA,qDAAqD,gBAAgB;AACrE;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;;AAEjC,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,gBAAgB;AACxE,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,8CAA8C;AAC9E;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,gBAAgB;AACjE,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,gBAAgB;AACjE,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,4BAA4B,OAAO;AACnC,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,8BAA8B,eAAe;AAC7C,6BAA6B,OAAO;AACpC,qBAAqB,MAAM;AAC3B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,8BAA8B,eAAe;AAC7C,wBAAwB,OAAO;AAC/B,qBAAqB,MAAM;AAC3B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iCAAiC;AAC1D,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iCAAiC;AAC1D,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS,0EAAmB;AAC5B;AACA;AACA,uCAAuC,WAAW;AACliC;;;;;;;;;;;AC76BA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACqB;AACkE;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,8CAA8C;AACzD,WAAW,OAAO;AAClB;AACA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK,0EAAmB;AACxB;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,kBAAkB;AACjC,eAAe,QAAQ;AACvB,iBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB,eAAe,OAAO;AACtB,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,SAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,uFAAmB,aAAa;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACQ;AACR,iC;;;;;;;;;;AC3NA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACqB;AACwB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA,4DAA4D,QAAQ;AACpE;AACA,SAAS,0EAAmB;AAC5B;AACA;AACA,2CAA2C,WAAW;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACO;AACR,iC;;;;;;;;;;;;;;;;AC3EA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACqB;AACwB;AAC7C;AACA;AACA;AACA;AACA;AACA,CAAC,0CAA0C;AAC3C;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AACrC;AACA;AACA;AACA;AACA;AACA,CAAC,8BAA8B;AAC/B;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sDAAsD;AACvD;AACA;AACA;AACA;AACA,CAAC,8BAA8B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B,iBAAiB,aAAa;AAC9B;AACA,sDAAsD,QAAQ;AAC9D;AACA;AACA;AACA,iBAAiB;AACjB;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA,SAAS,0EAAmB;AAC5B;AACA;AACA,yCAAyC,WAAW;AACpD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACO;AACR,iC","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { SignupPage } from './signup';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SignupPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(SignupPage),\r\n  ],\r\n})\r\nexport class SignupPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/signup/signup.module.ts","import { UserService, AuthenticationService, AlertService } from \"../../_services\";\r\nimport { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams, ActionSheetController, ToastController, Platform, LoadingController, Loading } from 'ionic-angular';\r\n\r\nimport { File } from '@ionic-native/file';\r\nimport { Transfer, TransferObject } from '@ionic-native/transfer';\r\nimport { FilePath } from '@ionic-native/file-path';\r\nimport { Camera } from '@ionic-native/camera';\r\n\r\ndeclare let cordova: any;\r\n\r\n@IonicPage()\r\n@Component( {\r\n    selector: 'page-signup',\r\n    templateUrl: 'signup.html',\r\n    providers: [ File, Transfer, Camera, FilePath, UserService ]\r\n} )\r\nexport class SignupPage\r\n{\r\n\r\n    user: any = {};\r\n    lastImage: string = null;\r\n    loading: Loading;\r\n\r\n    constructor (\r\n        public navCtrl: NavController,\r\n        public navParams: NavParams,\r\n        private camera: Camera,\r\n        private transfer: Transfer,\r\n        private file: File,\r\n        private filePath: FilePath,\r\n        public actionSheetCtrl: ActionSheetController,\r\n        public toastCtrl: ToastController,\r\n        public platform: Platform,\r\n        public loadingCtrl: LoadingController,\r\n        private userService: UserService,\r\n        private authenticationService: AuthenticationService,\r\n        private alertService: AlertService   )\r\n    {\r\n    };\r\n    public presentActionSheet ()\r\n    {\r\n        let actionSheet = this.actionSheetCtrl.create( {\r\n            title: 'Select Image Source',\r\n            buttons: [\r\n                {\r\n                    text: 'Load from Library',\r\n                    handler: () =>\r\n                    {\r\n                        this.takePicture( this.camera.PictureSourceType.PHOTOLIBRARY );\r\n                    }\r\n                },\r\n                {\r\n                    text: 'Use Camera',\r\n                    handler: () =>\r\n                    {\r\n                        this.takePicture( this.camera.PictureSourceType.CAMERA );\r\n                    }\r\n                },\r\n                {\r\n                    text: 'Cancel',\r\n                    role: 'cancel'\r\n                }\r\n            ]\r\n        } );\r\n        actionSheet.present();\r\n    }\r\n\r\n    public takePicture ( sourceType )\r\n    {\r\n        // Create options for the Camera Dialog\r\n        var options = {\r\n            quality: 100,\r\n            sourceType: sourceType,\r\n            saveToPhotoAlbum: false,\r\n            correctOrientation: true\r\n        };\r\n\r\n        // Get the data of an image\r\n        this.camera.getPicture( options ).then(( imagePath ) =>\r\n        {\r\n            // Special handling for Android library\r\n            if ( this.platform.is( 'android' ) && sourceType === this.camera.PictureSourceType.PHOTOLIBRARY )\r\n            {\r\n                this.filePath.resolveNativePath( imagePath )\r\n                    .then( filePath =>\r\n                    {\r\n                        let correctPath = filePath.substr( 0, filePath.lastIndexOf( '/' ) + 1 );\r\n                        let currentName = imagePath.substring( imagePath.lastIndexOf( '/' ) + 1, imagePath.lastIndexOf( '?' ) );\r\n                        this.copyFileToLocalDir( correctPath, currentName, this.createFileName() );\r\n                    } );\r\n            } else\r\n            {\r\n                var currentName = imagePath.substr( imagePath.lastIndexOf( '/' ) + 1 );\r\n                var correctPath = imagePath.substr( 0, imagePath.lastIndexOf( '/' ) + 1 );\r\n                this.copyFileToLocalDir( correctPath, currentName, this.createFileName() );\r\n            }\r\n        }, ( err ) =>\r\n        {\r\n            this.presentToast( 'Error while selecting image.' );\r\n        } );\r\n    }\r\n\r\n    // Create a new name for the image\r\n    private createFileName (): string\r\n    {\r\n        var d = new Date(),\r\n            n = d.getTime(),\r\n            newFileName = n + \".jpg\";\r\n        return newFileName;\r\n    }\r\n\r\n    // Copy the image to a local folder\r\n    private copyFileToLocalDir ( namePath, currentName, newFileName )\r\n    {\r\n        this.file.copyFile( namePath, currentName, cordova.file.dataDirectory, newFileName ).then( success =>\r\n        {\r\n            this.lastImage = newFileName;\r\n        }, error =>\r\n        {\r\n            console.log( error );\r\n            this.presentToast( 'Error while storing file.' );\r\n        } );\r\n    }\r\n\r\n    private presentToast ( text )\r\n    {\r\n        let toast = this.toastCtrl.create( {\r\n            message: text,\r\n            duration: 3000,\r\n            position: 'top'\r\n        } );\r\n        toast.present();\r\n    }\r\n\r\n    // Always get the accurate path to your apps folder\r\n    public pathForImage ( img )\r\n    {\r\n        if ( img === null )\r\n        {\r\n            return '';\r\n        } else\r\n        {\r\n            return cordova.file.dataDirectory + img;\r\n        }\r\n    }\r\n\r\n    public uploadImage ()\r\n    {\r\n        // Destination URL\r\n        var url = \"http://yoururl/upload.php\";\r\n\r\n        // File for Upload\r\n        var targetPath = this.pathForImage( this.lastImage );\r\n\r\n        // File name only\r\n        var filename = this.lastImage;\r\n\r\n        var options = {\r\n            fileKey: \"file\",\r\n            fileName: filename,\r\n            chunkedMode: false,\r\n            mimeType: \"multipart/form-data\",\r\n            params: { 'fileName': filename }\r\n        };\r\n\r\n        const fileTransfer: TransferObject = this.transfer.create();\r\n\r\n        this.loading = this.loadingCtrl.create( {\r\n            content: 'Uploading...',\r\n        } );\r\n        this.loading.present();\r\n\r\n        // Use the FileTransfer to upload the image\r\n        fileTransfer.upload( targetPath, url, options ).then( data =>\r\n        {\r\n            this.loading.dismissAll()\r\n            this.presentToast( 'Image succesfully uploaded.' );\r\n        }, err =>\r\n        {\r\n            this.loading.dismissAll()\r\n            this.presentToast( 'Error while uploading file.' );\r\n        } );\r\n    }\r\n\r\n    ionViewDidLoad ()\r\n    {\r\n        console.log( 'ionViewDidLoad SignupPage' );\r\n    }\r\n\r\n    submitForm ()\r\n    {   \r\n        this.userService.create(this.user).subscribe(\r\n            data=>{\r\n            this.authenticationService.login(this.user.username, this.user.password)\r\n                .subscribe(\r\n                data=>{\r\n                    this.navCtrl.setRoot( \"SidemenuPage\" );\r\n                },\r\n                error=>{\r\n                    this.alertService.error(error);\r\n                });\r\n        },\r\n        error=>{\r\n            this.alertService.error(error);\r\n        });\r\n    }\r\n\r\n    showLogin ()\r\n    {\r\n        this.navCtrl.pop();\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/signup/signup.ts","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Injectable } from '@angular/core';\r\nimport { CordovaProperty, Plugin, CordovaCheck, IonicNativePlugin } from '@ionic-native/core';\r\n/**\r\n * @name File\r\n * @description\r\n * This plugin implements a File API allowing read/write access to files residing on the device.\r\n *\r\n * The File class implements static convenience functions to access files and directories.\r\n *\r\n * Example:\r\n * ```\r\n * import { File } from '@ionic-native/file';\r\n *\r\n * constructor(private file: File) { }\r\n *\r\n * ...\r\n *\r\n * this.file.checkDir(this.file.dataDirectory, 'mydir').then(_ => console.log('Directory exists')).catch(err => console.log('Directory doesnt exist'));\r\n *\r\n * ```\r\n *\r\n *  This plugin is based on several specs, including : The HTML5 File API http: //www.w3.org/TR/FileAPI/\r\n *  The (now-defunct) Directories and System extensions Latest: http: //www.w3.org/TR/2012/WD-file-system-api-20120417/\r\n *  Although most of the plugin code was written when an earlier spec was current: http: //www.w3.org/TR/2011/WD-file-system-api-20110419/\r\n *  It also implements the FileWriter spec : http: //dev.w3.org/2009/dap/file-system/file-writer.html\r\n *  @interfaces\r\n *  IFile\r\n *  Entry\r\n *  DirectoryEntry\r\n *  DirectoryReader\r\n *  FileSystem\r\n */\r\nvar File = (function (_super) {\r\n    __extends(File, _super);\r\n    function File() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.cordovaFileError = {\r\n            1: 'NOT_FOUND_ERR',\r\n            2: 'SECURITY_ERR',\r\n            3: 'ABORT_ERR',\r\n            4: 'NOT_READABLE_ERR',\r\n            5: 'ENCODING_ERR',\r\n            6: 'NO_MODIFICATION_ALLOWED_ERR',\r\n            7: 'INVALID_STATE_ERR',\r\n            8: 'SYNTAX_ERR',\r\n            9: 'INVALID_MODIFICATION_ERR',\r\n            10: 'QUOTA_EXCEEDED_ERR',\r\n            11: 'TYPE_MISMATCH_ERR',\r\n            12: 'PATH_EXISTS_ERR',\r\n            13: 'WRONG_ENTRY_TYPE',\r\n            14: 'DIR_READ_ERR',\r\n        };\r\n        return _this;\r\n    }\r\n    /**\r\n     * Get free disk space in Bytes\r\n     * @returns {Promise<number>} Returns a promise that resolves with the remaining free disk space in Bytes\r\n     */\r\n    File.prototype.getFreeDiskSpace = function () {\r\n        return new Promise(function (resolve, reject) {\r\n            cordova.exec(resolve, reject, 'File', 'getFreeDiskSpace', []);\r\n        });\r\n    };\r\n    /**\r\n     * Check if a directory exists in a certain path, directory.\r\n     *\r\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\r\n     * @param {string} dir Name of directory to check\r\n     * @returns {Promise<boolean>} Returns a Promise that resolves to true if the directory exists or rejects with an error.\r\n     */\r\n    File.prototype.checkDir = function (path, dir) {\r\n        if ((/^\\//.test(dir))) {\r\n            var err = new FileError(5);\r\n            err.message = 'directory cannot start with \\/';\r\n            return Promise.reject(err);\r\n        }\r\n        var fullpath = path + dir;\r\n        return this.resolveDirectoryUrl(fullpath)\r\n            .then(function () {\r\n            return true;\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new directory in the specific path.\r\n     * The replace boolean value determines whether to replace an existing directory with the same name.\r\n     * If an existing directory exists and the replace value is false, the promise will fail and return an error.\r\n     *\r\n     * @param {string} path  Base FileSystem. Please refer to the iOS and Android filesystems above\r\n     * @param {string} dirName Name of directory to create\r\n     * @param {boolean} replace If true, replaces file with same name. If false returns error\r\n     * @returns {Promise<DirectoryEntry>} Returns a Promise that resolves with a DirectoryEntry or rejects with an error.\r\n     */\r\n    File.prototype.createDir = function (path, dirName, replace) {\r\n        var _this = this;\r\n        if ((/^\\//.test(dirName))) {\r\n            var err = new FileError(5);\r\n            err.message = 'directory cannot start with \\/';\r\n            return Promise.reject(err);\r\n        }\r\n        var options = {\r\n            create: true\r\n        };\r\n        if (!replace) {\r\n            options.exclusive = true;\r\n        }\r\n        return this.resolveDirectoryUrl(path)\r\n            .then(function (fse) {\r\n            return _this.getDirectory(fse, dirName, options);\r\n        });\r\n    };\r\n    /**\r\n     * Remove a directory at a given path.\r\n     *\r\n     * @param {string} path The path to the directory\r\n     * @param {string} dirName The directory name\r\n     * @returns {Promise<RemoveResult>} Returns a Promise that resolves to a RemoveResult or rejects with an error.\r\n     */\r\n    File.prototype.removeDir = function (path, dirName) {\r\n        var _this = this;\r\n        if ((/^\\//.test(dirName))) {\r\n            var err = new FileError(5);\r\n            err.message = 'directory cannot start with \\/';\r\n            return Promise.reject(err);\r\n        }\r\n        return this.resolveDirectoryUrl(path)\r\n            .then(function (fse) {\r\n            return _this.getDirectory(fse, dirName, { create: false });\r\n        })\r\n            .then(function (de) {\r\n            return _this.remove(de);\r\n        });\r\n    };\r\n    /**\r\n     * Move a directory to a given path.\r\n     *\r\n     * @param {string} path The source path to the directory\r\n     * @param {string} dirName The source directory name\r\n     * @param {string} newPath The destionation path to the directory\r\n     * @param {string} newDirName The destination directory name\r\n     * @returns {Promise<DirectoryEntry|Entry>} Returns a Promise that resolves to the new DirectoryEntry object or rejects with an error.\r\n     */\r\n    File.prototype.moveDir = function (path, dirName, newPath, newDirName) {\r\n        var _this = this;\r\n        newDirName = newDirName || dirName;\r\n        if ((/^\\//.test(newDirName))) {\r\n            var err = new FileError(5);\r\n            err.message = 'directory cannot start with \\/';\r\n            return Promise.reject(err);\r\n        }\r\n        return this.resolveDirectoryUrl(path)\r\n            .then(function (fse) {\r\n            return _this.getDirectory(fse, dirName, { create: false });\r\n        })\r\n            .then(function (srcde) {\r\n            return _this.resolveDirectoryUrl(newPath)\r\n                .then(function (deste) {\r\n                return _this.move(srcde, deste, newDirName);\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Copy a directory in various methods. If destination directory exists, will fail to copy.\r\n     *\r\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\r\n     * @param {string} dirName Name of directory to copy\r\n     * @param {string} newPath Base FileSystem of new location\r\n     * @param {string} newDirName New name of directory to copy to (leave blank to remain the same)\r\n     * @returns {Promise<Entry>} Returns a Promise that resolves to the new Entry object or rejects with an error.\r\n     */\r\n    File.prototype.copyDir = function (path, dirName, newPath, newDirName) {\r\n        var _this = this;\r\n        if ((/^\\//.test(newDirName))) {\r\n            var err = new FileError(5);\r\n            err.message = 'directory cannot start with \\/';\r\n            return Promise.reject(err);\r\n        }\r\n        return this.resolveDirectoryUrl(path)\r\n            .then(function (fse) {\r\n            return _this.getDirectory(fse, dirName, { create: false });\r\n        })\r\n            .then(function (srcde) {\r\n            return _this.resolveDirectoryUrl(newPath)\r\n                .then(function (deste) {\r\n                return _this.copy(srcde, deste, newDirName);\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * List files and directory from a given path.\r\n     *\r\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\r\n     * @param {string} dirName Name of directory\r\n     * @returns {Promise<Entry[]>} Returns a Promise that resolves to an array of Entry objects or rejects with an error.\r\n     */\r\n    File.prototype.listDir = function (path, dirName) {\r\n        var _this = this;\r\n        if ((/^\\//.test(dirName))) {\r\n            var err = new FileError(5);\r\n            err.message = 'directory cannot start with \\/';\r\n            return Promise.reject(err);\r\n        }\r\n        return this.resolveDirectoryUrl(path)\r\n            .then(function (fse) {\r\n            return _this.getDirectory(fse, dirName, { create: false, exclusive: false });\r\n        })\r\n            .then(function (de) {\r\n            var reader = de.createReader();\r\n            return _this.readEntries(reader);\r\n        });\r\n    };\r\n    /**\r\n     * Removes all files and the directory from a desired location.\r\n     *\r\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\r\n     * @param {string} dirName Name of directory\r\n     * @returns {Promise<RemoveResult>} Returns a Promise that resolves with a RemoveResult or rejects with an error.\r\n     */\r\n    File.prototype.removeRecursively = function (path, dirName) {\r\n        var _this = this;\r\n        if ((/^\\//.test(dirName))) {\r\n            var err = new FileError(5);\r\n            err.message = 'directory cannot start with \\/';\r\n            return Promise.reject(err);\r\n        }\r\n        return this.resolveDirectoryUrl(path)\r\n            .then(function (fse) {\r\n            return _this.getDirectory(fse, dirName, { create: false });\r\n        })\r\n            .then(function (de) {\r\n            return _this.rimraf(de);\r\n        });\r\n    };\r\n    /**\r\n     * Check if a file exists in a certain path, directory.\r\n     *\r\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\r\n     * @param {string} file Name of file to check\r\n     * @returns {Promise<boolean>} Returns a Promise that resolves with a boolean or rejects with an error.\r\n     */\r\n    File.prototype.checkFile = function (path, file) {\r\n        if ((/^\\//.test(file))) {\r\n            var err = new FileError(5);\r\n            err.message = 'file cannot start with \\/';\r\n            return Promise.reject(err);\r\n        }\r\n        return this.resolveLocalFilesystemUrl(path + file)\r\n            .then(function (fse) {\r\n            if (fse.isFile) {\r\n                return true;\r\n            }\r\n            else {\r\n                var err = new FileError(13);\r\n                err.message = 'input is not a file';\r\n                return Promise.reject(err);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new file in the specific path.\r\n     * The replace boolean value determines whether to replace an existing file with the same name.\r\n     * If an existing file exists and the replace value is false, the promise will fail and return an error.\r\n     *\r\n     * @param {string} path  Base FileSystem. Please refer to the iOS and Android filesystems above\r\n     * @param {string} fileName Name of file to create\r\n     * @param {boolean} replace If true, replaces file with same name. If false returns error\r\n     * @returns {Promise<FileEntry>} Returns a Promise that resolves to a FileEntry or rejects with an error.\r\n     */\r\n    File.prototype.createFile = function (path, fileName, replace) {\r\n        var _this = this;\r\n        if ((/^\\//.test(fileName))) {\r\n            var err = new FileError(5);\r\n            err.message = 'file-name cannot start with \\/';\r\n            return Promise.reject(err);\r\n        }\r\n        var options = {\r\n            create: true\r\n        };\r\n        if (!replace) {\r\n            options.exclusive = true;\r\n        }\r\n        return this.resolveDirectoryUrl(path)\r\n            .then(function (fse) {\r\n            return _this.getFile(fse, fileName, options);\r\n        });\r\n    };\r\n    /**\r\n     * Removes a file from a desired location.\r\n     *\r\n     * @param {string} path  Base FileSystem. Please refer to the iOS and Android filesystems above\r\n     * @param {string} fileName Name of file to remove\r\n     * @returns {Promise<RemoveResult>} Returns a Promise that resolves to a RemoveResult or rejects with an error.\r\n     */\r\n    File.prototype.removeFile = function (path, fileName) {\r\n        var _this = this;\r\n        if ((/^\\//.test(fileName))) {\r\n            var err = new FileError(5);\r\n            err.message = 'file-name cannot start with \\/';\r\n            return Promise.reject(err);\r\n        }\r\n        return this.resolveDirectoryUrl(path)\r\n            .then(function (fse) {\r\n            return _this.getFile(fse, fileName, { create: false });\r\n        })\r\n            .then(function (fe) {\r\n            return _this.remove(fe);\r\n        });\r\n    };\r\n    /** Write a new file to the desired location.\r\n     *\r\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\r\n     * @param {string} fileName path relative to base path\r\n     * @param {string | Blob} text content or blob to write\r\n     * @param {IWriteOptions} options replace file if set to true. See WriteOptions for more information.\r\n     * @returns {Promise<any>} Returns a Promise that resolves to updated file entry or rejects with an error.\r\n     */\r\n    File.prototype.writeFile = function (path, fileName, text, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        if ((/^\\//.test(fileName))) {\r\n            var err = new FileError(5);\r\n            err.message = 'file-name cannot start with \\/';\r\n            return Promise.reject(err);\r\n        }\r\n        var getFileOpts = {\r\n            create: !options.append,\r\n            exclusive: !options.replace\r\n        };\r\n        return this.resolveDirectoryUrl(path)\r\n            .then(function (directoryEntry) {\r\n            return _this.getFile(directoryEntry, fileName, getFileOpts);\r\n        })\r\n            .then(function (fileEntry) {\r\n            return _this.writeFileEntry(fileEntry, text, options);\r\n        });\r\n    };\r\n    /** Write content to FileEntry.\r\n     *\r\n     * @hidden\r\n     * @param {FileEntry} fe file entry object\r\n     * @param {string | Blob} text content or blob to write\r\n     * @param {IWriteOptions} options replace file if set to true. See WriteOptions for more information.\r\n     * @returns {Promise<FileEntry>} Returns a Promise that resolves to updated file entry or rejects with an error.\r\n     */\r\n    File.prototype.writeFileEntry = function (fe, text, options) {\r\n        var _this = this;\r\n        return this.createWriter(fe)\r\n            .then(function (writer) {\r\n            if (options.append) {\r\n                writer.seek(writer.length);\r\n            }\r\n            if (options.truncate) {\r\n                writer.truncate(options.truncate);\r\n            }\r\n            return _this.write(writer, text);\r\n        })\r\n            .then(function () { return fe; });\r\n    };\r\n    /** Write to an existing file.\r\n     *\r\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\r\n     * @param {string} fileName path relative to base path\r\n     * @param {string | Blob} text content or blob to write\r\n     * @returns {Promise<void>} Returns a Promise that resolves or rejects with an error.\r\n     */\r\n    File.prototype.writeExistingFile = function (path, fileName, text) {\r\n        return this.writeFile(path, fileName, text, { replace: true });\r\n    };\r\n    /**\r\n     * Read the contents of a file as text.\r\n     *\r\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\r\n     * @param {string} file Name of file, relative to path.\r\n     * @returns {Promise<string>} Returns a Promise that resolves with the contents of the file as string or rejects with an error.\r\n     */\r\n    File.prototype.readAsText = function (path, file) {\r\n        return this.readFile(path, file, 'Text');\r\n    };\r\n    /**\r\n     * Read file and return data as a base64 encoded data url.\r\n     * A data url is of the form:\r\n     *      data: [<mediatype>][;base64],<data>\r\n  \r\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\r\n     * @param {string} file Name of file, relative to path.\r\n     * @returns {Promise<string>} Returns a Promise that resolves with the contents of the file as data URL or rejects with an error.\r\n     */\r\n    File.prototype.readAsDataURL = function (path, file) {\r\n        return this.readFile(path, file, 'DataURL');\r\n    };\r\n    /**\r\n     * Read file and return data as a binary data.\r\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\r\n     * @param {string} file Name of file, relative to path.\r\n     * @returns {Promise<string>} Returns a Promise that resolves with the contents of the file as string rejects with an error.\r\n     */\r\n    File.prototype.readAsBinaryString = function (path, file) {\r\n        return this.readFile(path, file, 'BinaryString');\r\n    };\r\n    /**\r\n     * Read file and return data as an ArrayBuffer.\r\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\r\n     * @param {string} file Name of file, relative to path.\r\n     * @returns {Promise<ArrayBuffer>} Returns a Promise that resolves with the contents of the file as ArrayBuffer or rejects with an error.\r\n     */\r\n    File.prototype.readAsArrayBuffer = function (path, file) {\r\n        return this.readFile(path, file, 'ArrayBuffer');\r\n    };\r\n    File.prototype.readFile = function (path, file, readAs) {\r\n        var _this = this;\r\n        if ((/^\\//.test(file))) {\r\n            var err = new FileError(5);\r\n            err.message = 'file-name cannot start with \\/';\r\n            return Promise.reject(err);\r\n        }\r\n        return this.resolveDirectoryUrl(path)\r\n            .then(function (directoryEntry) {\r\n            return _this.getFile(directoryEntry, file, { create: false });\r\n        })\r\n            .then(function (fileEntry) {\r\n            var reader = new FileReader();\r\n            return new Promise(function (resolve, reject) {\r\n                reader.onloadend = function () {\r\n                    if (reader.result !== undefined || reader.result !== null) {\r\n                        resolve(reader.result);\r\n                    }\r\n                    else if (reader.error !== undefined || reader.error !== null) {\r\n                        reject(reader.error);\r\n                    }\r\n                    else {\r\n                        reject({ code: null, message: 'READER_ONLOADEND_ERR' });\r\n                    }\r\n                };\r\n                fileEntry.file(function (file) {\r\n                    reader[\"readAs\" + readAs].call(reader, file);\r\n                }, function (error) {\r\n                    reject(error);\r\n                });\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Move a file to a given path.\r\n     *\r\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\r\n     * @param {string} fileName Name of file to move\r\n     * @param {string} newPath Base FileSystem of new location\r\n     * @param {string} newFileName New name of file to move to (leave blank to remain the same)\r\n     * @returns {Promise<Entry>} Returns a Promise that resolves to the new Entry or rejects with an error.\r\n     */\r\n    File.prototype.moveFile = function (path, fileName, newPath, newFileName) {\r\n        var _this = this;\r\n        newFileName = newFileName || fileName;\r\n        if ((/^\\//.test(newFileName))) {\r\n            var err = new FileError(5);\r\n            err.message = 'file name cannot start with \\/';\r\n            return Promise.reject(err);\r\n        }\r\n        return this.resolveDirectoryUrl(path)\r\n            .then(function (fse) {\r\n            return _this.getFile(fse, fileName, { create: false });\r\n        })\r\n            .then(function (srcfe) {\r\n            return _this.resolveDirectoryUrl(newPath)\r\n                .then(function (deste) {\r\n                return _this.move(srcfe, deste, newFileName);\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Copy a file in various methods. If file exists, will fail to copy.\r\n     *\r\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\r\n     * @param {string} fileName Name of file to copy\r\n     * @param {string} newPath Base FileSystem of new location\r\n     * @param {string} newFileName New name of file to copy to (leave blank to remain the same)\r\n     * @returns {Promise<Entry>} Returns a Promise that resolves to an Entry or rejects with an error.\r\n     */\r\n    File.prototype.copyFile = function (path, fileName, newPath, newFileName) {\r\n        var _this = this;\r\n        newFileName = newFileName || fileName;\r\n        if ((/^\\//.test(newFileName))) {\r\n            var err = new FileError(5);\r\n            err.message = 'file name cannot start with \\/';\r\n            return Promise.reject(err);\r\n        }\r\n        return this.resolveDirectoryUrl(path)\r\n            .then(function (fse) {\r\n            return _this.getFile(fse, fileName, { create: false });\r\n        })\r\n            .then(function (srcfe) {\r\n            return _this.resolveDirectoryUrl(newPath)\r\n                .then(function (deste) {\r\n                return _this.copy(srcfe, deste, newFileName);\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @hidden\r\n     */\r\n    File.prototype.fillErrorMessage = function (err) {\r\n        try {\r\n            err.message = this.cordovaFileError[err.code];\r\n        }\r\n        catch (e) { }\r\n    };\r\n    /**\r\n     * Resolves a local file system URL\r\n     * @param fileUrl {string} file system url\r\n     * @returns {Promise<Entry>}\r\n     */\r\n    File.prototype.resolveLocalFilesystemUrl = function (fileUrl) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            try {\r\n                window.resolveLocalFileSystemURL(fileUrl, function (entry) {\r\n                    resolve(entry);\r\n                }, function (err) {\r\n                    _this.fillErrorMessage(err);\r\n                    reject(err);\r\n                });\r\n            }\r\n            catch (xc) {\r\n                _this.fillErrorMessage(xc);\r\n                reject(xc);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Resolves a local directory url\r\n     * @param directoryUrl {string} directory system url\r\n     * @returns {Promise<DirectoryEntry>}\r\n     */\r\n    File.prototype.resolveDirectoryUrl = function (directoryUrl) {\r\n        return this.resolveLocalFilesystemUrl(directoryUrl)\r\n            .then(function (de) {\r\n            if (de.isDirectory) {\r\n                return de;\r\n            }\r\n            else {\r\n                var err = new FileError(13);\r\n                err.message = 'input is not a directory';\r\n                return Promise.reject(err);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Get a directory\r\n     * @param directoryEntry {DirectoryEntry} Directory entry, obtained by resolveDirectoryUrl method\r\n     * @param directoryName {string} Directory name\r\n     * @param flags {Flags} Options\r\n     * @returns {Promise<DirectoryEntry>}\r\n     */\r\n    File.prototype.getDirectory = function (directoryEntry, directoryName, flags) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            try {\r\n                directoryEntry.getDirectory(directoryName, flags, function (de) {\r\n                    resolve(de);\r\n                }, function (err) {\r\n                    _this.fillErrorMessage(err);\r\n                    reject(err);\r\n                });\r\n            }\r\n            catch (xc) {\r\n                _this.fillErrorMessage(xc);\r\n                reject(xc);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Get a file\r\n     * @param directoryEntry {DirectoryEntry} Directory entry, obtained by resolveDirectoryUrl method\r\n     * @param fileName {string} File name\r\n     * @param flags {Flags} Options\r\n     * @returns {Promise<FileEntry>}\r\n     */\r\n    File.prototype.getFile = function (directoryEntry, fileName, flags) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            try {\r\n                directoryEntry.getFile(fileName, flags, resolve, function (err) {\r\n                    _this.fillErrorMessage(err);\r\n                    reject(err);\r\n                });\r\n            }\r\n            catch (xc) {\r\n                _this.fillErrorMessage(xc);\r\n                reject(xc);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @hidden\r\n     */\r\n    File.prototype.remove = function (fe) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            fe.remove(function () {\r\n                resolve({ success: true, fileRemoved: fe });\r\n            }, function (err) {\r\n                _this.fillErrorMessage(err);\r\n                reject(err);\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @hidden\r\n     */\r\n    File.prototype.move = function (srce, destdir, newName) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            srce.moveTo(destdir, newName, function (deste) {\r\n                resolve(deste);\r\n            }, function (err) {\r\n                _this.fillErrorMessage(err);\r\n                reject(err);\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @hidden\r\n     */\r\n    File.prototype.copy = function (srce, destdir, newName) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            srce.copyTo(destdir, newName, function (deste) {\r\n                resolve(deste);\r\n            }, function (err) {\r\n                _this.fillErrorMessage(err);\r\n                reject(err);\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @hidden\r\n     */\r\n    File.prototype.readEntries = function (dr) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            dr.readEntries(function (entries) {\r\n                resolve(entries);\r\n            }, function (err) {\r\n                _this.fillErrorMessage(err);\r\n                reject(err);\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @hidden\r\n     */\r\n    File.prototype.rimraf = function (de) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            de.removeRecursively(function () {\r\n                resolve({ success: true, fileRemoved: de });\r\n            }, function (err) {\r\n                _this.fillErrorMessage(err);\r\n                reject(err);\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @hidden\r\n     */\r\n    File.prototype.createWriter = function (fe) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            fe.createWriter(function (writer) {\r\n                resolve(writer);\r\n            }, function (err) {\r\n                _this.fillErrorMessage(err);\r\n                reject(err);\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @hidden\r\n     */\r\n    File.prototype.write = function (writer, gu) {\r\n        if (gu instanceof Blob) {\r\n            return this.writeFileInChunks(writer, gu);\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            writer.onwriteend = function (evt) {\r\n                if (writer.error) {\r\n                    reject(writer.error);\r\n                }\r\n                else {\r\n                    resolve(evt);\r\n                }\r\n            };\r\n            writer.write(gu);\r\n        });\r\n    };\r\n    /**\r\n     * @hidden\r\n     */\r\n    File.prototype.writeFileInChunks = function (writer, file) {\r\n        var BLOCK_SIZE = 1024 * 1024;\r\n        var writtenSize = 0;\r\n        function writeNextChunk() {\r\n            var size = Math.min(BLOCK_SIZE, file.size - writtenSize);\r\n            var chunk = file.slice(writtenSize, writtenSize + size);\r\n            writtenSize += size;\r\n            writer.write(chunk);\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            writer.onerror = reject;\r\n            writer.onwrite = function () {\r\n                if (writtenSize < file.size) {\r\n                    writeNextChunk();\r\n                }\r\n                else {\r\n                    resolve();\r\n                }\r\n            };\r\n            writeNextChunk();\r\n        });\r\n    };\r\n    File.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    File.ctorParameters = function () { return []; };\r\n    __decorate([\r\n        CordovaProperty,\r\n        __metadata(\"design:type\", String)\r\n    ], File.prototype, \"applicationDirectory\", void 0);\r\n    __decorate([\r\n        CordovaProperty,\r\n        __metadata(\"design:type\", String)\r\n    ], File.prototype, \"applicationStorageDirectory\", void 0);\r\n    __decorate([\r\n        CordovaProperty,\r\n        __metadata(\"design:type\", String)\r\n    ], File.prototype, \"dataDirectory\", void 0);\r\n    __decorate([\r\n        CordovaProperty,\r\n        __metadata(\"design:type\", String)\r\n    ], File.prototype, \"cacheDirectory\", void 0);\r\n    __decorate([\r\n        CordovaProperty,\r\n        __metadata(\"design:type\", String)\r\n    ], File.prototype, \"externalApplicationStorageDirectory\", void 0);\r\n    __decorate([\r\n        CordovaProperty,\r\n        __metadata(\"design:type\", String)\r\n    ], File.prototype, \"externalDataDirectory\", void 0);\r\n    __decorate([\r\n        CordovaProperty,\r\n        __metadata(\"design:type\", String)\r\n    ], File.prototype, \"externalCacheDirectory\", void 0);\r\n    __decorate([\r\n        CordovaProperty,\r\n        __metadata(\"design:type\", String)\r\n    ], File.prototype, \"externalRootDirectory\", void 0);\r\n    __decorate([\r\n        CordovaProperty,\r\n        __metadata(\"design:type\", String)\r\n    ], File.prototype, \"tempDirectory\", void 0);\r\n    __decorate([\r\n        CordovaProperty,\r\n        __metadata(\"design:type\", String)\r\n    ], File.prototype, \"syncedDataDirectory\", void 0);\r\n    __decorate([\r\n        CordovaProperty,\r\n        __metadata(\"design:type\", String)\r\n    ], File.prototype, \"documentsDirectory\", void 0);\r\n    __decorate([\r\n        CordovaProperty,\r\n        __metadata(\"design:type\", String)\r\n    ], File.prototype, \"sharedDirectory\", void 0);\r\n    __decorate([\r\n        CordovaCheck(),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", []),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], File.prototype, \"getFreeDiskSpace\", null);\r\n    __decorate([\r\n        CordovaCheck(),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [String, String]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], File.prototype, \"checkDir\", null);\r\n    __decorate([\r\n        CordovaCheck(),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [String, String, Boolean]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], File.prototype, \"createDir\", null);\r\n    __decorate([\r\n        CordovaCheck(),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [String, String]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], File.prototype, \"removeDir\", null);\r\n    __decorate([\r\n        CordovaCheck(),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [String, String, String, String]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], File.prototype, \"moveDir\", null);\r\n    __decorate([\r\n        CordovaCheck(),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [String, String, String, String]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], File.prototype, \"copyDir\", null);\r\n    __decorate([\r\n        CordovaCheck(),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [String, String]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], File.prototype, \"listDir\", null);\r\n    __decorate([\r\n        CordovaCheck(),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [String, String]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], File.prototype, \"removeRecursively\", null);\r\n    __decorate([\r\n        CordovaCheck(),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [String, String]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], File.prototype, \"checkFile\", null);\r\n    __decorate([\r\n        CordovaCheck(),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [String, String, Boolean]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], File.prototype, \"createFile\", null);\r\n    __decorate([\r\n        CordovaCheck(),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [String, String]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], File.prototype, \"removeFile\", null);\r\n    __decorate([\r\n        CordovaCheck(),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [String, String, Object, Object]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], File.prototype, \"writeFile\", null);\r\n    __decorate([\r\n        CordovaCheck(),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [String, String, Object]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], File.prototype, \"writeExistingFile\", null);\r\n    __decorate([\r\n        CordovaCheck(),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [String, String]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], File.prototype, \"readAsText\", null);\r\n    __decorate([\r\n        CordovaCheck(),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [String, String]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], File.prototype, \"readAsDataURL\", null);\r\n    __decorate([\r\n        CordovaCheck(),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [String, String]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], File.prototype, \"readAsBinaryString\", null);\r\n    __decorate([\r\n        CordovaCheck(),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [String, String]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], File.prototype, \"readAsArrayBuffer\", null);\r\n    __decorate([\r\n        CordovaCheck(),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [String, String, String, String]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], File.prototype, \"moveFile\", null);\r\n    __decorate([\r\n        CordovaCheck(),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [String, String, String, String]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], File.prototype, \"copyFile\", null);\r\n    __decorate([\r\n        CordovaCheck(),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [String]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], File.prototype, \"resolveLocalFilesystemUrl\", null);\r\n    __decorate([\r\n        CordovaCheck(),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [String]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], File.prototype, \"resolveDirectoryUrl\", null);\r\n    __decorate([\r\n        CordovaCheck(),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [Object, String, Object]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], File.prototype, \"getDirectory\", null);\r\n    __decorate([\r\n        CordovaCheck(),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [Object, String, Object]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], File.prototype, \"getFile\", null);\r\n    File = __decorate([\r\n        Plugin({\r\n            pluginName: 'File',\r\n            plugin: 'cordova-plugin-file',\r\n            pluginRef: 'cordova.file',\r\n            repo: 'https://github.com/apache/cordova-plugin-file',\r\n            platforms: ['Android', 'BlackBerry 10', 'Browser', 'Firefox OS', 'iOS', 'macOS', 'Ubuntu', 'Windows', 'Windows Phone']\r\n        })\r\n    ], File);\r\n    return File;\r\n}(IonicNativePlugin));\r\nexport { File };\r\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/file/index.js\n// module id = 314\n// module chunks = 0","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { CordovaInstance, Plugin, InstanceCheck, checkAvailability, IonicNativePlugin } from '@ionic-native/core';\n/**\n * @name Transfer\n *\n * @description\n * This plugin allows you to upload and download files.\n *\n * @usage\n * ```typescript\n * import { Transfer, FileUploadOptions, TransferObject } from '@ionic-native/transfer';\n * import { File } from '@ionic-native/file';\n *\n * constructor(private transfer: Transfer, private file: File) { }\n *\n * ...\n *\n * const fileTransfer: TransferObject = this.transfer.create();\n *\n * // Upload a file:\n * fileTransfer.upload(..).then(..).catch(..);\n *\n * // Download a file:\n * fileTransfer.download(..).then(..).catch(..);\n *\n * // Abort active transfer:\n * fileTransfer.abort();\n *\n * // full example\n * upload() {\n *   let options: FileUploadOptions = {\n *      fileKey: 'file',\n *      fileName: 'name.jpg',\n *      headers: {}\n *      .....\n *   }\n *\n *   fileTransfer.upload('<file path>', '<api endpoint>', options)\n *    .then((data) => {\n *      // success\n *    }, (err) => {\n *      // error\n *    })\n * }\n **\n * download() {\n *   const url = 'http://www.example.com/file.pdf';\n *   fileTransfer.download(url, this.file.dataDirectory + 'file.pdf').then((entry) => {\n *     console.log('download complete: ' + entry.toURL());\n *   }, (error) => {\n *     // handle error\n *   });\n * }\n *\n * ```\n *\n * To store files in a different/publicly accessible directory, please refer to the following link\n * https://github.com/apache/cordova-plugin-file#where-to-store-files\n *\n * @interfaces\n * FileUploadOptions\n * FileUploadResult\n * FileTransferError\n * @classes\n * TransferObject\n */\nvar Transfer = (function (_super) {\n    __extends(Transfer, _super);\n    function Transfer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Error code rejected from upload with FileTransferError\n         * Defined in FileTransferError.\n         *      FILE_NOT_FOUND_ERR: 1   Return when file was not found\n         *      INVALID_URL_ERR: 2,     Return when url was invalid\n         *      CONNECTION_ERR: 3,      Return on connection error\n         *      ABORT_ERR: 4,           Return on aborting\n         *      NOT_MODIFIED_ERR: 5     Return on '304 Not Modified' HTTP response\n         * @enum {number}\n         */\n        _this.FileTransferErrorCode = {\n            FILE_NOT_FOUND_ERR: 1,\n            INVALID_URL_ERR: 2,\n            CONNECTION_ERR: 3,\n            ABORT_ERR: 4,\n            NOT_MODIFIED_ERR: 5\n        };\n        return _this;\n    }\n    /**\n     * Creates a new FileTransfer object\n     * @return {TransferObject}\n     */\n    Transfer.prototype.create = function () {\n        return new TransferObject();\n    };\n    return Transfer;\n}(IonicNativePlugin));\nTransfer.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nTransfer.ctorParameters = function () { return []; };\nTransfer = __decorate([\n    Plugin({\n        pluginName: 'FileTransfer',\n        plugin: 'cordova-plugin-file-transfer',\n        pluginRef: 'FileTransfer',\n        repo: 'https://github.com/apache/cordova-plugin-file-transfer',\n        platforms: ['Amazon Fire OS', 'Android', 'Browser', 'iOS', 'Ubuntu', 'Windows', 'Windows Phone']\n    })\n], Transfer);\nexport { Transfer };\n/**\n * @hidden\n */\nvar TransferObject = (function () {\n    function TransferObject() {\n        if (checkAvailability('FileTransfer', null, 'FileTransfer') === true) {\n            this._objectInstance = new FileTransfer();\n        }\n    }\n    /**\n     * Sends a file to a server.\n     *\n     * @param {string} fileUrl  Filesystem URL representing the file on the device or a data URI. For backwards compatibility, this can also be the full path of the file on the device.\n     * @param {string} url  URL of the server to receive the file, as encoded by encodeURI().\n     * @param {FileUploadOptions} options  Optional parameters.\n     * @param {boolean} trustAllHosts  Optional parameter, defaults to false. If set to true, it accepts all security certificates. This is useful since Android rejects self-signed security certificates. Not recommended for production use. Supported on Android and iOS.\n     * @returns {Promise<FileUploadResult>} Returns a Promise that resolves to a FileUploadResult and rejects with FileTransferError.\n     */\n    TransferObject.prototype.upload = function (fileUrl, url, options, trustAllHosts) {\n        return;\n    };\n    /**\n     * Downloads a file from server.\n     *\n     * @param {string} source  URL of the server to download the file, as encoded by encodeURI().\n     * @param {string} target  Filesystem url representing the file on the device. For backwards compatibility, this can also be the full path of the file on the device.\n     * @param {boolean} trustAllHosts  Optional parameter, defaults to false. If set to true, it accepts all security certificates. This is useful because Android rejects self-signed security certificates. Not recommended for production use. Supported on Android and iOS.\n     * @param {object} Optional parameters, currently only supports headers (such as Authorization (Basic Authentication), etc).\n     * @returns {Promise<any>} Returns a Promise that resolves to a FileEntry object.\n     */\n    TransferObject.prototype.download = function (source, target, trustAllHosts, options) {\n        return;\n    };\n    /**\n     * Registers a listener that gets called whenever a new chunk of data is transferred.\n     * @param listener {function} Listener that takes a progress event.\n     */\n    TransferObject.prototype.onProgress = function (listener) {\n        this._objectInstance.onprogress = listener;\n    };\n    /**\n     * Aborts an in-progress transfer. The onerror callback is passed a FileTransferError\n     * object which has an error code of FileTransferError.ABORT_ERR.\n     */\n    TransferObject.prototype.abort = function () { };\n    return TransferObject;\n}());\n__decorate([\n    CordovaInstance({\n        successIndex: 2,\n        errorIndex: 3\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String, String, Object, Boolean]),\n    __metadata(\"design:returntype\", Promise)\n], TransferObject.prototype, \"upload\", null);\n__decorate([\n    CordovaInstance({\n        successIndex: 2,\n        errorIndex: 3\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String, String, Boolean, Object]),\n    __metadata(\"design:returntype\", Promise)\n], TransferObject.prototype, \"download\", null);\n__decorate([\n    InstanceCheck({ sync: true }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Function]),\n    __metadata(\"design:returntype\", void 0)\n], TransferObject.prototype, \"onProgress\", null);\n__decorate([\n    CordovaInstance({\n        sync: true\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", void 0)\n], TransferObject.prototype, \"abort\", null);\nTransferObject = __decorate([\n    Plugin({\n        plugin: 'cordova-plugin-file-transfer',\n        pluginName: 'FileTransfer'\n    }),\n    __metadata(\"design:paramtypes\", [])\n], TransferObject);\nexport { TransferObject };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/transfer/index.js\n// module id = 315\n// module chunks = 0","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Injectable } from '@angular/core';\r\nimport { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\r\n/**\r\n * @name File Path\r\n * @description\r\n *\r\n * This plugin allows you to resolve the native filesystem path for Android content URIs and is based on code in the aFileChooser library.\r\n *\r\n * @usage\r\n * ```typescript\r\n * import { FilePath } from '@ionic-native/file-path';\r\n *\r\n * constructor(private filePath: FilePath) { }\r\n *\r\n * ...\r\n *\r\n * this.filePath.resolveNativePath(path)\r\n *   .then(filePath => console.log(filePath))\r\n *   .catch(err => console.log(err));\r\n *\r\n * ```\r\n */\r\nvar FilePath = (function (_super) {\r\n    __extends(FilePath, _super);\r\n    function FilePath() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Resolve native path for given content URL/path.\r\n     * @param {String} path  Content URL/path.\r\n     * @returns {Promise<string>}\r\n     */\r\n    FilePath.prototype.resolveNativePath = function (path) { return; };\r\n    FilePath.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    FilePath.ctorParameters = function () { return []; };\r\n    __decorate([\r\n        Cordova(),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [String]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], FilePath.prototype, \"resolveNativePath\", null);\r\n    FilePath = __decorate([\r\n        Plugin({\r\n            pluginName: 'FilePath',\r\n            plugin: 'cordova-plugin-filepath',\r\n            pluginRef: 'window.FilePath',\r\n            repo: 'https://github.com/hiddentao/cordova-plugin-filepath',\r\n            platforms: ['Android']\r\n        })\r\n    ], FilePath);\r\n    return FilePath;\r\n}(IonicNativePlugin));\r\nexport { FilePath };\r\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/file-path/index.js\n// module id = 316\n// module chunks = 0","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Injectable } from '@angular/core';\r\nimport { Cordova, Plugin, IonicNativePlugin } from '@ionic-native/core';\r\nexport var DestinationType;\r\n(function (DestinationType) {\r\n    DestinationType[DestinationType[\"DATA_URL\"] = 0] = \"DATA_URL\";\r\n    DestinationType[DestinationType[\"FILE_URL\"] = 1] = \"FILE_URL\";\r\n    DestinationType[DestinationType[\"NATIVE_URI\"] = 2] = \"NATIVE_URI\";\r\n})(DestinationType || (DestinationType = {}));\r\nexport var EncodingType;\r\n(function (EncodingType) {\r\n    EncodingType[EncodingType[\"JPEG\"] = 0] = \"JPEG\";\r\n    EncodingType[EncodingType[\"PNG\"] = 1] = \"PNG\";\r\n})(EncodingType || (EncodingType = {}));\r\nexport var MediaType;\r\n(function (MediaType) {\r\n    MediaType[MediaType[\"PICTURE\"] = 0] = \"PICTURE\";\r\n    MediaType[MediaType[\"VIDEO\"] = 1] = \"VIDEO\";\r\n    MediaType[MediaType[\"ALLMEDIA\"] = 2] = \"ALLMEDIA\";\r\n})(MediaType || (MediaType = {}));\r\nexport var PictureSourceType;\r\n(function (PictureSourceType) {\r\n    PictureSourceType[PictureSourceType[\"PHOTOLIBRARY\"] = 0] = \"PHOTOLIBRARY\";\r\n    PictureSourceType[PictureSourceType[\"CAMERA\"] = 1] = \"CAMERA\";\r\n    PictureSourceType[PictureSourceType[\"SAVEDPHOTOALBUM\"] = 2] = \"SAVEDPHOTOALBUM\";\r\n})(PictureSourceType || (PictureSourceType = {}));\r\nexport var PopoverArrowDirection;\r\n(function (PopoverArrowDirection) {\r\n    PopoverArrowDirection[PopoverArrowDirection[\"ARROW_UP\"] = 1] = \"ARROW_UP\";\r\n    PopoverArrowDirection[PopoverArrowDirection[\"ARROW_DOWN\"] = 2] = \"ARROW_DOWN\";\r\n    PopoverArrowDirection[PopoverArrowDirection[\"ARROW_LEFT\"] = 3] = \"ARROW_LEFT\";\r\n    PopoverArrowDirection[PopoverArrowDirection[\"ARROW_RIGHT\"] = 4] = \"ARROW_RIGHT\";\r\n    PopoverArrowDirection[PopoverArrowDirection[\"ARROW_ANY\"] = 5] = \"ARROW_ANY\";\r\n})(PopoverArrowDirection || (PopoverArrowDirection = {}));\r\nexport var Direction;\r\n(function (Direction) {\r\n    Direction[Direction[\"BACK\"] = 0] = \"BACK\";\r\n    Direction[Direction[\"FRONT\"] = 1] = \"FRONT\";\r\n})(Direction || (Direction = {}));\r\n/**\r\n * @name Camera\r\n * @description\r\n * Take a photo or capture video.\r\n *\r\n * Requires and the Cordova plugin: `cordova-plugin-camera`. For more info, please see the [Cordova Camera Plugin Docs](https://github.com/apache/cordova-plugin-camera).\r\n *\r\n * @usage\r\n * ```typescript\r\n * import { Camera, CameraOptions } from '@ionic-native/camera';\r\n *\r\n * constructor(private camera: Camera) { }\r\n *\r\n * ...\r\n *\r\n *\r\n * const options: CameraOptions = {\r\n *   quality: 100,\r\n *   destinationType: this.camera.DestinationType.DATA_URL,\r\n *   encodingType: this.camera.EncodingType.JPEG,\r\n *   mediaType: this.camera.MediaType.PICTURE\r\n * }\r\n *\r\n * this.camera.getPicture(options).then((imageData) => {\r\n *  // imageData is either a base64 encoded string or a file URI\r\n *  // If it's base64:\r\n *  let base64Image = 'data:image/jpeg;base64,' + imageData;\r\n * }, (err) => {\r\n *  // Handle error\r\n * });\r\n * ```\r\n * @interfaces\r\n * CameraOptions\r\n * CameraPopoverOptions\r\n */\r\nvar Camera = (function (_super) {\r\n    __extends(Camera, _super);\r\n    function Camera() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Constant for possible destination types\r\n         */\r\n        _this.DestinationType = {\r\n            /** Return base64 encoded string. DATA_URL can be very memory intensive and cause app crashes or out of memory errors. Use FILE_URI or NATIVE_URI if possible */\r\n            DATA_URL: 0,\r\n            /** Return file uri (content://media/external/images/media/2 for Android) */\r\n            FILE_URI: 1,\r\n            /** Return native uri (eg. asset-library://... for iOS) */\r\n            NATIVE_URI: 2\r\n        };\r\n        /**\r\n         * Convenience constant\r\n         */\r\n        _this.EncodingType = {\r\n            /** Return JPEG encoded image */\r\n            JPEG: 0,\r\n            /** Return PNG encoded image */\r\n            PNG: 1\r\n        };\r\n        /**\r\n         * Convenience constant\r\n         */\r\n        _this.MediaType = {\r\n            /** Allow selection of still pictures only. DEFAULT. Will return format specified via DestinationType */\r\n            PICTURE: 0,\r\n            /** Allow selection of video only, ONLY RETURNS URL */\r\n            VIDEO: 1,\r\n            /** Allow selection from all media types */\r\n            ALLMEDIA: 2\r\n        };\r\n        /**\r\n         * Convenience constant\r\n         */\r\n        _this.PictureSourceType = {\r\n            /** Choose image from picture library (same as SAVEDPHOTOALBUM for Android) */\r\n            PHOTOLIBRARY: 0,\r\n            /** Take picture from camera */\r\n            CAMERA: 1,\r\n            /** Choose image from picture library (same as PHOTOLIBRARY for Android) */\r\n            SAVEDPHOTOALBUM: 2\r\n        };\r\n        /**\r\n         * Convenience constant\r\n         */\r\n        _this.PopoverArrowDirection = {\r\n            ARROW_UP: 1,\r\n            ARROW_DOWN: 2,\r\n            ARROW_LEFT: 4,\r\n            ARROW_RIGHT: 8,\r\n            ARROW_ANY: 15\r\n        };\r\n        /**\r\n         * Convenience constant\r\n         */\r\n        _this.Direction = {\r\n            /** Use the back-facing camera */\r\n            BACK: 0,\r\n            /** Use the front-facing camera */\r\n            FRONT: 1\r\n        };\r\n        return _this;\r\n    }\r\n    /**\r\n     * Take a picture or video, or load one from the library.\r\n     * @param {CameraOptions} [options] Options that you want to pass to the camera. Encoding type, quality, etc. Platform-specific quirks are described in the [Cordova plugin docs](https://github.com/apache/cordova-plugin-camera#cameraoptions-errata-).\r\n     * @returns {Promise<any>} Returns a Promise that resolves with Base64 encoding of the image data, or the image file URI, depending on cameraOptions, otherwise rejects with an error.\r\n     */\r\n    Camera.prototype.getPicture = function (options) { return; };\r\n    /**\r\n     * Remove intermediate image files that are kept in temporary storage after calling camera.getPicture.\r\n     * Applies only when the value of Camera.sourceType equals Camera.PictureSourceType.CAMERA and the Camera.destinationType equals Camera.DestinationType.FILE_URI.\r\n     * @returns {Promise<any>}\r\n     */\r\n    Camera.prototype.cleanup = function () { return; };\r\n    ;\r\n    Camera.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    Camera.ctorParameters = function () { return []; };\r\n    __decorate([\r\n        Cordova({\r\n            callbackOrder: 'reverse'\r\n        }),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [Object]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], Camera.prototype, \"getPicture\", null);\r\n    __decorate([\r\n        Cordova({\r\n            platforms: ['iOS']\r\n        }),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", []),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], Camera.prototype, \"cleanup\", null);\r\n    Camera = __decorate([\r\n        Plugin({\r\n            pluginName: 'Camera',\r\n            plugin: 'cordova-plugin-camera',\r\n            pluginRef: 'navigator.camera',\r\n            repo: 'https://github.com/apache/cordova-plugin-camera',\r\n            platforms: ['Android', 'BlackBerry 10', 'Browser', 'Firefox OS', 'iOS', 'Ubuntu', 'Windows', 'Windows Phone 8']\r\n        })\r\n    ], Camera);\r\n    return Camera;\r\n}(IonicNativePlugin));\r\nexport { Camera };\r\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/camera/index.js\n// module id = 317\n// module chunks = 0"],"sourceRoot":""}